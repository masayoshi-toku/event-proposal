---
import { isVoted } from '../storage';
import VoteButton from './VoteButton.astro';

export interface Props {
  title: string;
  uuid: string;
  voteCount?: number;
}

const { title, uuid, voteCount = 0} = Astro.props;
---

<div class="proposal flex items-center p-4 mb-2" data-uuid={uuid}>
  <p class="proposal-title mr-3">{title}</p>
  <p class="proposal-vote-count">
    <VoteButton voted={isVoted(uuid)}></VoteButton>
    {voteCount}
  </p>
</div>

<style lang="scss">
  .proposal {
    background-color: #EEE;
  }
</style>

<script>
  import { createClient } from '@supabase/supabase-js';
  import { newVote } from '../storage';

  const supabase = createClient(import.meta.env.PUBLIC_SUPABASE_PROJECT_URL, import.meta.env.PUBLIC_SUPABASE_PUBLIC_KEY);
  const proposals = document.querySelectorAll('.proposal');

  proposals.forEach(proposal => {
    const proposalUuid = proposal.dataset.uuid;
    const voteBtn = proposal.querySelector('.vote-btn');

    voteBtn?.addEventListener('click', async () => {
      await supabase.from('votes').insert({ proposal_uuid: proposalUuid });
      newVote(proposalUuid);

      location.reload();
    });
  });
</script>
